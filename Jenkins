pipeline {
    agent any
  
    stages {

        stage('Build') {
            steps {
                // Use Maven as the build automation tool
                bat 'python main.py'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                // Use Maven as the build automation tool
                echo 'Unit and Integration Tests using Selenium with python bindings'
            }
        }
        stage('Code Analysis') {
            steps {
                // Use Maven as the build automation tool
                echo 'this is code anlaysis using pylint'
            }
        }
    
         stage('Security Scan') {
            steps {
                // Use Maven as the build automation tool
                echo 'this is code anlaysis using Bandit'
            }
        }
         stage('Integration Tests on Staging') {
            steps {
                // Use Maven as the build automation tool
                echo 'this is Integration Tests on Staging using AWS EC2'
            }
        }
        
     
          stage('Deploy to Production') {
            steps {
                // Use Maven as the build automation tool
                echo 'this is Deploy to Production using AWS EC2'
            }
        }
      
      
      
       
    }
  
    post {
        success {
            // Send email notification on pipeline success
                archiveArtifacts(artifacts: 'logs/*.log', fingerprint: true),

                mail to: "Xiaolumangoncloudnine@gmail.com",
                subject: "Pipeline Status: Success",
                body: "The pipeline has been successfully executed.",
                attachments: 'logs/*.log'
         
            
        }
      
        failure {
            // Send email notification on pipeline failure
                mail to: "Xiaolumangoncloudnine@gmail.com",
                subject: "Pipeline Status: Failure",
                body: "The pipeline has failed. Please check the logs for more details."
  
            
        }
    }
}
